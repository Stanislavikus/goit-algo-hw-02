def is_balanced(expression):
    stack = []
    pairs = {')': '(', ']': '[', '}': '{'}

    for char in expression:
        if char in "([{":
            stack.append(char)
        elif char in ")]}":
            if not stack or stack.pop() != pairs[char]:
                return False
    return not stack

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
examples = [
    "( ){[ 1 ]( 1 + 3 )( ){ }}",  # –°–∏–º–µ—Ç—Ä–∏—á–Ω–æ
    "( 23 ( 2 - 3);",             # –ù–µ—Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ
    "( 11 }"                     # –ù–µ—Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ
]

for expr in examples:
    cleaned = ''.join(c for c in expr if c in '()[]{}')
    result = is_balanced(cleaned)
    print(f"üß© '{expr}' -> {'–°–∏–º–µ—Ç—Ä–∏—á–Ω–æ' if result else '–ù–µ—Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ'}")
